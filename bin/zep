#!/usr/bin/php
<?php

// Require stuff
require(realpath(getcwd() . "/vendor/autoload.php"));

date_default_timezone_set('Europe/London');

$zep = new Zepto\Console\Zep($argv, getcwd());

// Add parameter
$zep->param("option", "Choose from init or new", true);

// Add options
$zep->option("-p, --plugin",  "Create new plugin");
$zep->option("-c, --content", "Create new content");

// Exit if ``parse()`` fails
if(!$zep->parse()) {
    exit(1);
}

// Get input
$input = $zep->get_inputs();

// If ``zep init`` is run
if ($zep->get("option") === "init") {
    $zep->init();
}
// If ``zep new`` is run
elseif ($zep->get("option") === "new") {

    // Get the flag specified by user
    $key = array_search(true, $input);

    // If creating a new plugin
    if ($key === "-p") {

        try {
            if ($zep->check_current_directory() === FALSE) {
                throw new \Exception("No plugins directory found, run zep init");
            }
            $name = $zep->prompt("Plugin name:");
            $zep->new_plugin($name);
        }
        catch (Exception $e) {
            $zep->out($e->getMessage());
        }
    }
    // If creating new content
    elseif ($key === "-c") {

        // Make sure current directory has 'content' and 'plugins' folders
        try {
            if ($zep->check_current_directory() === FALSE) {
                throw new \Exception("No content directory found, run zep init");
            }
            $name  = $zep->prompt("Filename:");
            $title = $this->prompt("Title:");
            $desc  = $this->prompt("Description: (Optional)");
            $date  = $this->prompt("Date: (Leave empty for today's date)");
            $zep->new_content($name, $title, $desc, $date);
        }
        catch (Exception $e) {
            $zep->out($e->getMessage());
        }
    }
}
