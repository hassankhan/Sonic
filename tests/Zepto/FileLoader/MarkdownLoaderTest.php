<?php
namespace Zepto\FileLoader;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-11-03 at 13:49:12.
 */
class MarkdownLoaderTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @covers Zepto\FileLoader\MarkdownLoader::__construct()
     * @covers Zepto\FileLoader\MarkdownLoader::parser()
     */
    public function testConstructWithMarkdown()
    {
        $parser = $this->getMock('Michelf\Markdown', array('defaultTransform'));
        $loader = new MarkdownLoader(ROOT_DIR . 'content', $parser);

        $this->assertInstanceOf('Michelf\Markdown', $loader->parser());
    }

    /**
     * @covers Zepto\FileLoader\MarkdownLoader::__construct()
     * @covers Zepto\FileLoader\MarkdownLoader::parser()
     */
    public function testConstructWithMarkdownExtra()
    {
        $parser = $this->getMock('Michelf\MarkdownExtra', array('defaultTransform'));
        $loader = new MarkdownLoader(ROOT_DIR . 'content', $parser);

        $this->assertInstanceOf('Michelf\MarkdownExtra', $loader->parser());
    }

    /**
     * @covers Zepto\FileLoader\MarkdownLoader::load()
     */
    public function testLoad()
    {
        $parsed_text = '<h2>This is a Sub Page</h2>' . PHP_EOL . PHP_EOL
            . '<p>This is page.md in the "sub" folder.</p>' . PHP_EOL . PHP_EOL
            . '<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>' . PHP_EOL . PHP_EOL
            . '<p>Donec ultricies tristique nulla et mattis.</p>' . PHP_EOL . PHP_EOL
            . '<p>Phasellus id massa eget nisl congue blandit sit amet id ligula.</p>' . PHP_EOL;

        // Create a stub for the SomeClass class.
        $parser = $this->getMock('Michelf\MarkdownInterface', array('defaultTransform', 'transform'));

        $parser::staticExpects($this->any())
                ->method('defaultTransform')
                ->will($this->returnValue($parsed_text));

        $loader = new MarkdownLoader(ROOT_DIR . 'content', $parser);

        $expected['sub/page.md'] = array(
            'meta'    => array(
                'title'         => 'Sub Page',
            ),
            'content' => $parsed_text
        );

        $actual = $loader->load('sub/page.md');
        $this->assertEquals($expected, $actual);
    }

}
