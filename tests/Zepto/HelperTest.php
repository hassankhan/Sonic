<?php
namespace Zepto;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-02-12 at 20:07:01.
 */
class HelperTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @covers Zepto\Helper::default_config()
     */
    public function testDefaultConfig()
    {
        $expected = array(
            'zepto.environment'           => 'dev',
            'zepto.content_dir'           => 'content',
            'zepto.plugins_dir'           => 'plugins',
            'zepto.templates_dir'         => 'templates',
            'zepto.default_template'      => 'base.twig',
            'zepto.default_list_template' => 'list.twig',
            'zepto.content_ext'           => array('md', 'markdown'),
            'zepto.plugins_enabled'       => false,
            'site.site_root'              => 'http://localhost:8888/zepto/',
            'site.site_title'             => 'Zepto',
            'site.date_format'            => 'jS M Y',
            'site.excerpt_length'         => '50',
            'twig'                       => array(
                'charset'           => 'utf-8',
                'cache'             => 'cache',
                'strict_variables'  => false,
                'autoescape'        => false,
                'auto_reload'       => true
            )
        );
        $this->assertEquals($expected, Helper::default_config());
    }

    /**
     * @covers Zepto\Helper::url_for()
     * @covers Zepto\Helper::dot_extensions()
     */
    public function testUrlFor()
    {
        $zepto    = new Zepto;
        $helper   = new Helper($zepto->app);
        $actual   = $helper->url_for('index.md');
        $expected = 'http://localhost:8888/zepto/';
        $this->assertEquals($expected, $actual);
    }

    /**
     * @covers Zepto\Helper::url_for()
     * @covers Zepto\Helper::dot_extensions()
     */
    public function testUrlForFailure()
    {
        ob_start();
        $zepto    = new Zepto;
        $helper   = new Helper($zepto->app);
        $actual   = $helper->url_for('non-index.md');
        $this->assertNull($actual);
        ob_end_clean();
    }

    /**
     * @covers Zepto\Helper::link_for()
     */
    public function testLinkFor()
    {
        $zepto    = new Zepto;
        $helper   = new Helper($zepto->app);
        $actual   = $helper->link_for('index.md');
        $expected = '<a href="http://localhost:8888/zepto/"> Welcome </a>';
        $this->assertEquals($expected, $actual);
    }

    /**
     * @covers Zepto\Helper::link_for()
     */
    public function testLinkForFailure()
    {
        ob_start();
        $zepto  = new Zepto;
        $helper = new Helper($zepto->app);
        $actual = $helper->link_for('non-index.md');
        $this->assertNull($actual);
        ob_end_clean();
    }

    /**
     * @covers Zepto\Helper::validate_config()
     */
    public function testValidateConfig()
    {
        $config = Helper::default_config();
        $this->assertTrue(Helper::validate_config($config));
    }

    /**
     * @covers            Zepto\Helper::validate_config()
     * @expectedException InvalidArgumentException
     */
    public function testConfigWithInvalidContentDir()
    {
        $config = Helper::default_config();
        $config['zepto.content_dir'] = 'no_such_dir';
        Helper::validate_config($config);
    }

    /**
     * @covers            Zepto\Helper::validate_config()
     * @expectedException InvalidArgumentException
     */
    public function testConfigWithInvalidPluginsDir()
    {
        $config = Helper::default_config();
        $config['zepto.plugins_dir'] = 'no_such_dir';
        Helper::validate_config($config);
    }

    /**
     * @covers            Zepto\Helper::validate_config()
     * @expectedException InvalidArgumentException
     */
    public function testConfigWithInvalidTemplatesDir()
    {
        $config = Helper::default_config();
        $config['zepto.templates_dir'] = 'no_such_dir';
        Helper::validate_config($config);
    }

    /**
     * @covers            Zepto\Helper::validate_config()
     * @expectedException InvalidArgumentException
     */
    public function testConfigWithInvalidDefaultTemplate()
    {
        $config = Helper::default_config();
        $config['zepto.default_template'] = 'no_such_file';
        Helper::validate_config($config);
    }

    /**
     * @covers            Zepto\Helper::validate_config()
     * @expectedException InvalidArgumentException
     */
    public function testConfigWithInvalidSiteRoot()
    {
        $config = Helper::default_config();
        $config['zepto.environment'] = 'production';
        $config['site']['site_root'] = 'fuck://this@should?fail';
        Helper::validate_config($config);
    }

    /**
     * @covers            Zepto\Helper::handle_errors()
     * @expectedException ErrorException
     */
    public function testHandleErrors()
    {
        Helper::handle_errors();
    }

    /**
     * @covers Zepto\Helper::handle_errors()
     */
    public function testHandleErrorsWhenTurnedOff()
    {
        error_reporting(0);
        $actual = Helper::handle_errors();
        $this->assertNull($actual);
    }

}
