<?php
namespace Zepto;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-11-03 at 13:49:12.
 */
class PluginLoaderTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var FileLoader
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object   = new FileLoader\PluginLoader();

        include_once(ROOT_DIR . 'plugins/ExamplePlugin.php');
        include_once(ROOT_DIR . 'plugins/OtherExamplePlugin.php');

        $plugin_1_name = 'ExamplePlugin';
        $plugin_2_name = 'OtherExamplePlugin';

        $plugin_1      = new $plugin_1_name;
        $plugin_2      = new $plugin_2_name;

        $this->plugins = array(
            $plugin_1_name => $plugin_1,
            $plugin_2_name => $plugin_2
        );


    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        $this->object = null;
    }

    /**
     * @covers Zepto\FileLoader\PluginLoader::load()
     * @expectedException Exception
     */
    public function testLoad()
    {
        $this->object->load('@Â£@', 'aa');
    }

    /**
     * @covers Zepto\FileLoader\PluginLoader::load
     * @todo   Implement testLoad().
     */
    public function testLoadSingleFile()
    {
        $path   = ROOT_DIR . 'plugins/ExamplePlugin.php';

        $actual = $this->object->load($path, array('php'));

        $expected = array(
            'ExamplePlugin' => $this->plugins['ExamplePlugin']
        );

        $this->assertEquals($expected, $actual);
    }

    /**
     * @covers Zepto\FileLoader\PluginLoader::load()
     */
    public function testLoadMultipleFiles()
    {
        $path   = ROOT_DIR . 'plugins';

        $actual = $this->object->load($path, array('php'));

        $expected = array(
            'ExamplePlugin'      => $this->plugins['ExamplePlugin'],
            'OtherExamplePlugin' => $this->plugins['OtherExamplePlugin']
        );

        $this->assertEquals($expected, $actual);
    }

}
